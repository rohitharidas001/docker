#version: "3.8"
services:

  loadbalancer:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - appread
      - appwrite
    networks:
      - app-network

  appread:
    deploy:
      replicas: 3
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-key.json
    volumes:
      - C:/Users/nived/AppData/Roaming/gcloud/application_default_credentials.json:/app/gcp-key.json # Mount the key file


  appwrite:
    deploy:
      replicas: 2
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-key.json
    volumes:
      - C:/Users/nived/AppData/Roaming/gcloud/application_default_credentials.json:/app/gcp-key.json # Mount the key file

  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    networks:
      - app-network
volumes:
  db_data:

networks:
  app-network:
    driver: bridge